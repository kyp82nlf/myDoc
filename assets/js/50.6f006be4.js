(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{439:function(e,t,o){"use strict";o.r(t);var n=o(18),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"node-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#node-election"}},[e._v("#")]),e._v(" Node Election")]),e._v(" "),o("h2",{attrs:{id:"overview"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),o("p",[e._v("TOP Network node election system is under the following principles:")]),e._v(" "),o("ul",[o("li",[e._v("Permissionless: The nodes are permissionless, meaning Permissionless means nodescan access and exit the network freely. Nodes are also free to participate regardless of the size of their stake.")]),e._v(" "),o("li",[e._v("PoS* consensus mechanism: TOP's consensus mechanism ensures that node participation is directly proportional to their stake. More your stake, more your chances of getting selected.")]),e._v(" "),o("li",[e._v("Consensus nodes are randomly generated and rotated regularly to avoid network monopoly.")]),e._v(" "),o("li",[e._v("The more staking made the more secure consensus.")])]),e._v(" "),o("h2",{attrs:{id:"stake"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#stake"}},[e._v("#")]),e._v(" Stake")]),e._v(" "),o("p",[e._v("In most PoS structure, the only factor that determines whether a node is eligible to join the network is the minimum deposit.")]),e._v(" "),o("p",[e._v('TOP Network expands this concept to what we call "Comprehensive Stake." Comprehensive equity considers multiple factors to determine the possibility of a node being elected to participate in the consensus.')]),e._v(" "),o("p",[e._v("Factor#1: Deposit")]),e._v(" "),o("p",[e._v("All nodes in the network will require a minimum deposit. Minimum deposit can be adjusted by on-chain governance. The creation initial values are as follows:")]),e._v(" "),o("table",[o("thead",[o("tr",[o("th",[e._v("Node Type")]),e._v(" "),o("th",[e._v("Minimum Registration Deposit")])])]),e._v(" "),o("tbody",[o("tr",[o("td",[e._v("edge")]),e._v(" "),o("td",[e._v("100,000*10^6 uTOP")])]),e._v(" "),o("tr",[o("td",[e._v("validator")]),e._v(" "),o("td",[e._v("500,000*10^6 uTOP")])]),e._v(" "),o("tr",[o("td",[e._v("advance")]),e._v(" "),o("td",[e._v("1,000,000*10^6 uTOP")])])])]),e._v(" "),o("p",[e._v("Factor #2: Credit score")]),e._v(" "),o("p",[e._v("The node's contribution history is taken into account to investigate their credit or reputation. The more tasks a node completes, the higher its reputation, increasing its overall comprehensive equity. If the bandwidth or computing power of a node is low compared to the other nodes, its reputation score will decrease.")]),e._v(" "),o("p",[e._v("Nodes fulfilling validator and auditor roles have their own credit points. Since advance nodes can serve both of these functions, they can gain credit score from both the validator and auditor functions.")]),e._v(" "),o("p",[e._v("When you register the node, your default credit score will be 0.1.")]),e._v(" "),o("p",[e._v("So, how is the credit score counted? The shards in the network routinely report number of blocks generated by each verification node and audit node to Beacon. The Beacon uses this information to update the node's credit score.")]),e._v(" "),o("p",[e._v("The credit score of the validator and auditor increases with each new block. The highest score is capped at 1. After the score reaches 1, it will no longer increase.")]),e._v(" "),o("p",[e._v("When a node's bandwidth or computing power lags far behind other nodes or a node commits malicious acts, its credit score will drop to the lowest score of 0.1. These parameters can be configured through on-chain governance.")]),e._v(" "),o("p",[e._v("Factor #3: Numbers of Votes")]),e._v(" "),o("p",[e._v("Any token holder can convert their token to votes and vote for advance nodes.")]),e._v(" "),o("p",[e._v("As with any more election, the only way that nodes must accumulate as many votes as they possibly can to get elected as a block producer.")]),e._v(" "),o("p",[e._v("After registering as an advance node. The election determines what role it will take.")]),e._v(" "),o("ul",[o("li",[e._v("Advance nodes are elected as audtior, archive, Root-Beacon, and Sub-Beacon. The votes obtained by the node need to be greater than or equal to the actual pledged deposit of the node (here, the node deposit is calculated as TOP, not uTOP).")]),e._v(" "),o("li",[e._v("When the votes are lower than the actual pledge deposit, the advance node can only be selected as the validator.")])]),e._v(" "),o("h3",{attrs:{id:"node-stake-algorithm"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#node-stake-algorithm"}},[e._v("#")]),e._v(" Node Stake Algorithm")]),e._v(" "),o("p",[e._v("All nodes that need to participate in consensus have node stakes which includes auditor, validator, Root-Beacon, and Sub-Beacon. Different roles correspond to different node stakes and algorithms for different roles are different.")]),e._v(" "),o("h4",{attrs:{id:"auditor-stake"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#auditor-stake"}},[e._v("#")]),e._v(" Auditor stake")]),e._v(" "),o("p",[e._v("Auditor stake is related to node deposit, the votes obtained, and the auditor credit score.")]),e._v(" "),o("p",[e._v("Auditor Stake= (Node Deposit+Votes/2) * Auditor Credit Score")]),e._v(" "),o("h4",{attrs:{id:"validator-stake"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#validator-stake"}},[e._v("#")]),e._v(" Validator stake")]),e._v(" "),o("p",[e._v("Validator stake is related to node deposit and votes obtained.")]),e._v(" "),o("p",[e._v("Validator Stake=sqrt[(Node Deposit+Votes/2) /*Validator Credit Score]")]),e._v(" "),o("h4",{attrs:{id:"sub-beacon-stake"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#sub-beacon-stake"}},[e._v("#")]),e._v(" Sub-Beacon stake")]),e._v(" "),o("p",[e._v("Sub-Beacon Stake is related to deposit and votes obtained.")]),e._v(" "),o("p",[e._v("Sub-Beacon Stake=Node Deposit+votes/2")]),e._v(" "),o("h4",{attrs:{id:"root-beacon-stake"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#root-beacon-stake"}},[e._v("#")]),e._v(" Root-Beacon stake")]),e._v(" "),o("p",[e._v("Root-Beacon stake is related to deposit and votes obtained.")]),e._v(" "),o("p",[e._v("Root-Beacon stake=Node Deposit+votes/2")]),e._v(" "),o("h2",{attrs:{id:"node-election-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#node-election-2"}},[e._v("#")]),e._v(" Node Election")]),e._v(" "),o("p",[e._v("As long as they meet certain requirements, nodes fulfill specific services in TOP Network.")]),e._v(" "),o("p",[e._v("There are several types of nodes in the TOP Network consensus network. Node registration and sorting are handled through smart contracts (Root-Beacon and Sub-Beacon) that are deployed on Root-Beacon and the VRF-FTS algorithm.")]),e._v(" "),o("h3",{attrs:{id:"vrf-fts-random-sorting-and-leader-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#vrf-fts-random-sorting-and-leader-election"}},[e._v("#")]),e._v(" VRF-FTS Random Sorting and Leader Election")]),e._v(" "),o("p",[e._v("The node classification and sorting process use the VRF-FTS algorithm. Essentially, VRF generates a publicly verifiable random seed based on some input data and then feeds it back to the FTS algorithm. The FTS algorithm is weighted by the comprehensive equity of a node. A series of smart contracts on Beacon track the node's workload contribution, total margin, voting and any bad behavior. These values are calculated by Sub-Beacon to form a comprehensive equity, which is used in the weighted FTS algorithm. The higher the comprehensive equity of a node, the higher the probability of being randomly divided into shards or clusters.")]),e._v(" "),o("p",[e._v("VRF-FTS process also determins the leader election.")]),e._v(" "),o("p",[e._v("The chance of being selected as a pBFT leader is also measured by the comprehensive equity of a node.")]),e._v(" "),o("p",[e._v("Descripption：")]),e._v(" "),o("blockquote",[o("p",[e._v("The election block is represented by a clock block, and a clock block is generated in 10s.")])]),e._v(" "),o("h3",{attrs:{id:"root-beacon-group-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#root-beacon-group-election"}},[e._v("#")]),e._v(" Root-Beacon Group Election")]),e._v(" "),o("p",[e._v("The Beacon consensus nodes are selected in the election.")]),e._v(" "),o("p",[e._v("Election frequency: The Beacon consensus node is elected once every 7 days. The Root-Beacon leader triggers the elections once the clock block height finished one day.")]),e._v(" "),o("p",[e._v("Election block consensus group: Root-Beacon group, the current Root-Beacon elects the next Root-Beacon. The first Root-Beacon is composed of 32 genesis nodes.")]),e._v(" "),o("p",[e._v("Election object: All advance nodes and creation nodes in the Root-Beacon candidate pool contract.")]),e._v(" "),o("p",[e._v("Number of election nodes:")]),e._v(" "),o("p",[e._v("If the Root-Beacon group is not fully selected, nodes can only rotate in but not rotate out; when the Root-Beacon group is fully selected, the number of nodes in and out of the turms are the same. The specific logic is as follows:")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("When the number in the Root-Beacon group = the maximum number of nodes in the Root-Beacon group max_Root-Beacon_group_size:"),o("br"),e._v("\nNumber of rotate in nodes = number of rotate out nodes = min (max (1/6*number of Root-Beacon group nodes rounded down, 1), number of candidate Root-Beacon nodes);")])]),e._v(" "),o("li",[o("p",[e._v("When the number in the Root-Beacon group is less than the maximum number of nodes in the Root-Beacon group max_Root-Beacon_group_size:"),o("br"),e._v("\nNumber of rotate out nodes = 0"),o("br"),e._v("\nNumber of rotate in nodes = min (max (1/6*number of Root-Beacon group nodes rounded down, 1), number of candidate Root-Beacons)")])])]),e._v(" "),o("p",[e._v("Rotate-in node strategy: FTS according to Root-Beacon_stake, the higher the Root-Beacon_stake, the greater the probability of being selected.")]),e._v(" "),o("p",[e._v("Rotate out node strategy: give priority to nodes that are not Root-Beacon (including changing the node type and no longer serving as Root-Beacon) and unregistered nodes (including nodes that are actively unregister and unregistered by the system). If the number of rotate out nodes has been exceeded, a random algorithm is adopted Determine which nodes will be rotate out; if the above nodes do not exceed the number of nodes to be rotate out in this round, the remaining nodes will be FTS in accordance with 1/Root-Beacon_stake from the Root-Beacon group, that is, the higher the Root-Beacon_stake, the lower the probability that they will be rotate out.")]),e._v(" "),o("h3",{attrs:{id:"sub-beacon-group-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#sub-beacon-group-election"}},[e._v("#")]),e._v(" Sub-Beacon Group Election")]),e._v(" "),o("p",[e._v("The election is the sub Beacon consensus node.")]),e._v(" "),o("p",[e._v("Election frequency and trigger: The election is changed every 7 days, and when the Root-Beacon leader finds that the clock block height reaches 7 days and it will initiate the Sub-Beacon election.")]),e._v(" "),o("p",[e._v("Election block consensus group: Root-Beacon group")]),e._v(" "),o("p",[e._v("Election object: All advance nodes and creation nodes in the Root-Beacon candidate pool contract.")]),e._v(" "),o("p",[e._v("Number of election nodes:")]),e._v(" "),o("p",[e._v("If the Sub-Beacon group is not fully selected, nodes will only rotate in but not rotate out; When the Sub-Beacon group is fully selected, and the number of nodes in and out of the temrs is the same. The specific logic is as following:")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("When the number in the Sub-Beacon group = the maximum number of nodes in the Sub-Beacon group max_Sub-Beacon_group_size:"),o("br"),e._v("\nNumber of rotate in nodes = number of rotate out nodes = min (max (1/6"),o("em",[e._v("Sub-Beacon group node number rounded down, 1), number of candidate Sub-Beacon nodes);")])])]),e._v(" "),o("li",[o("p",[e._v("When the number in the Sub-Beacon group <the maximum number of nodes in the Sub-Beacon group max_Sub-Beacon_group_size:"),o("br"),e._v("\nNumber of rotate out nodes = 0"),o("br"),e._v("\nNumber of rotate in nodes = min (max (1/6*Sub-Beacon group node number rounded down, 1), number of candidate Sub-Beacon)")])])]),e._v(" "),o("p",[e._v("Rotate in node strategy: FTS according to Sub-Beacon_stake, the higher the Sub-Beacon_stake, the greater the probability of being selected.")]),e._v(" "),o("p",[e._v("Rotate out node strategy: Priority will be given to nodes that are not Sub-Beacon (including changing the node type and no longer serving as Sub-Beacon) and unregistered nodes (including nodes that are actively unregister and unregistered by the system).")]),e._v(" "),o("p",[e._v("If the number of rotate out nodes is exceeded, a random algorithm gets executed to determine which nodes need to be rotated out.")]),e._v(" "),o("p",[e._v("If the number of nodes is less than the number of rotate out nodes, the remaining nodes will execute the FTS algo which will be inversely proportional to the Sub-Beacon_stake. In other words, higher the Sub-Beacon_stake, lower the probability of rounding out.")]),e._v(" "),o("h3",{attrs:{id:"consensus-cluster-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#consensus-cluster-election"}},[e._v("#")]),e._v(" Consensus Cluster Election")]),e._v(" "),o("p",[e._v("A consensus cluster includes one auditor group and multiple validator groups. The elections of different clusters are independent from each other and will not be conducted simultaneously. A cluster will first conduct the auditor group election and then the validator group election. However, two validator groups under the same cluster will conduct simultaneous elections.")]),e._v(" "),o("p",[e._v("Election frequency and trigger: Initially, elections will be rotated every 10 minutes, and will be changed to every 3 hours through on-chain proposals. When the Sub-Beacon leader finds that clock block height has reached 7 days he initiates a cluster election.")]),e._v(" "),o("p",[e._v("Election consensus group: Sub-Beacon group.")]),e._v(" "),o("p",[e._v("Election process: first confirm the list of auditor candidate pool → confirm the number of auditor cancellations in the group → confirm the number of auditors that rotate out and rotate in → rotate the auditor according to the policy → confirm the list of validator candidate pool (the auditors in the previous step will join this candidate pool)→confirm the number of validator cancellations in the group→confirm the number of validator out and in nodes→ rotate multiple validator groups under the cluster at the same time according to the strategy (nodes of the previous group will not be rotated into the next group).")]),e._v(" "),o("h4",{attrs:{id:"auditor-group-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#auditor-group-election"}},[e._v("#")]),e._v(" Auditor Group Election")]),e._v(" "),o("p",[e._v("Candidate node pool for rotating in nodes:")]),e._v(" "),o("p",[e._v("Among all the advance nodes in the Sub-Beacon candidate pool contract those are not elected as active auditors or validators in the current cluster and do not serve as active auditors in other clusters, includes creation nodes.")]),e._v(" "),o("p",[e._v("Auditor effective stake:")]),e._v(" "),o("p",[e._v("The auditor stake of each node is saved in the node registration contract.")]),e._v(" "),o("p",[e._v("When auditor stake=0 (such as creation node), the node does not participate in sorting, and directly assigns effective stake=1;")]),e._v(" "),o("p",[e._v("When auditor stake＞0, the system sorts the auditor stake from large to small with 27 nodes as a segment (27 is the governance parameter on the chain). The effective stake of the auditor in the same segment is the same, and the effective stake of the node in the next segment is more than that in the previous segment. The lower 10% is rounded down (10% on-chain governance parameters), the effective stake value in the first paragraph is 100 million, and the minimum effective stake is 1. This means, An+1=max (An*90% is rounded down, 1) .")]),e._v(" "),o("p",[e._v("Details as follows:")]),e._v(" "),o("p",[e._v("A1: 100000000")]),e._v(" "),o("p",[e._v("A2: 90000000")]),e._v(" "),o("p",[e._v("A3: 81000000")]),e._v(" "),o("p",[e._v("A4: 79000000")]),e._v(" "),o("p",[e._v("……")]),e._v(" "),o("p",[e._v("An+1: max (An*90% is rounded down, 1)")]),e._v(" "),o("p",[e._v("Node rotate out strategy:")]),e._v(" "),o("p",[e._v('Priority will be given to nodes that are not auditors (including insufficient votes, changing node types and no longer acting as auditors) and deregistered nodes (including nodes that are actively unregister and unregistered by the system). If the number of rotate out nodes has been exceeded, a random algorithm is used to determine which nodes will be rotating out; if the above nodes do not exceed the number of nodes to be turned in this round, the remaining nodes will be rounded down from the auditor group according to "(maximum effective auditor stake in candidate pool * 100 million / effective auditor stake of current node)" for FTS, That is, the higher the auditor_stake, the lower the probability of rotating out.')]),e._v(" "),o("p",[e._v("Node rotate in strategy:")]),e._v(" "),o("p",[e._v("There are 27 nodes in a group, sorted by auditor_stake from high to low. The effective stakes of the nodes in the group are the same. FTS is performed according to the effective stake, that is, the higher the effective stake of the auditor, the greater the probability of rotation.")]),e._v(" "),o("p",[e._v("Number of rotation nodes:")]),e._v(" "),o("p",[e._v("When candidate pool has sufficient nodes and if the auditor group is not fully selected, nodes only rotate in but not rotate out; if the candidate nodes is not enought or the candidate node is enough however the auditor group is full, the number of nodes rotate in and out are the same.")]),e._v(" "),o("h4",{attrs:{id:"validator-group-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#validator-group-election"}},[e._v("#")]),e._v(" Validator Group Election")]),e._v(" "),o("p",[e._v("Candidate node pool for rotating in nodes:")]),e._v(" "),o("p",[e._v("Among all the advance nodes in the Sub-Beacon candidate pool contract those are not selected as active validators and are not active auditors in the current cluster (including nodes that have just been selected as auditors in the group for this round), and are not active validators in other clusters.")]),e._v(" "),o("p",[e._v("Note that also includes the advance nodes have just been rotated out of the auditor group by the FTS algorithm in this round (the advance nodes that are turned out by logging out or changing the node type are not counted). The creation nodes are also included.")]),e._v(" "),o("p",[e._v("Node rotate out strategy:")]),e._v(" "),o("p",[e._v("Nodes that are not validator type(have changed their type) and have been unregistered are rotated out preferentially. However, what happens if the number of these nodes exceeds the number of nodes that need to be rotated out in this round? In this case, the FTS algorithm will be used to determine which nodes are rotated out. If these nodes are less than the nodes that need to be rotated out in this round, the remaining nodes will be selected by FTS from the validator group according to “The highest validator stake in the candidate pool*100 million/validator stake of the current node” . That is, the smaller validator stake is, the more likely it is to be rotated out.")]),e._v(" "),o("p",[e._v("Node rotate in strategy:")]),e._v(" "),o("p",[e._v("FTS is performed on validator candidate pool nodes according to validator_stake. Higher the validator_stake, the greater the probability of rotation.")]),e._v(" "),o("p",[e._v("Number of rotation nodes:")]),e._v(" "),o("p",[e._v("When candidate pool has sufficient nodes and if the auditor group is not fully selected, nodes only rotate in but not rotate out.")]),e._v(" "),o("h3",{attrs:{id:"archive-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#archive-election"}},[e._v("#")]),e._v(" Archive Election")]),e._v(" "),o("p",[e._v("Election Frequency: 360 clock period")]),e._v(" "),o("p",[e._v("Election of block consensus group: Root-Beacon")]),e._v(" "),o("p",[e._v("Election object: advance nodes that votes and deposit meet the minimum requirements of the auditor in the Root-Beacon candidate pool contract")]),e._v(" "),o("p",[e._v("Number of rotate in nodes: All candidate archive nodes.")]),e._v(" "),o("p",[e._v("Number of rotate out nodes: All archive nodes that are unregistered or replaced.")]),e._v(" "),o("h3",{attrs:{id:"edge-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#edge-election"}},[e._v("#")]),e._v(" Edge Election")]),e._v(" "),o("p",[e._v("Election Frequency: 360 clock period")]),e._v(" "),o("p",[e._v("Election of block consensus group: Root-Beacon")]),e._v(" "),o("p",[e._v("Election object: All edge nodes and creation nodes in Root-Beacon candidate pool contract.")]),e._v(" "),o("p",[e._v("Number of rotate in nodes: All candidate edge nodes.")]),e._v(" "),o("p",[e._v("Number of rotate out nodes: All edge nodes that are unregistered or replaced.")]),e._v(" "),o("h3",{attrs:{id:"consensus-group-leader-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#consensus-group-leader-election"}},[e._v("#")]),e._v(" Consensus Group Leader Election")]),e._v(" "),o("h4",{attrs:{id:"root-beacon-group-leader-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#root-beacon-group-leader-election"}},[e._v("#")]),e._v(" Root-Beacon Group Leader Election")]),e._v(" "),o("p",[e._v("Election frequency: transaction level.")]),e._v(" "),o("p",[e._v("Election block consensus group: Root-Beacon group.")]),e._v(" "),o("p",[e._v("Node pool includes: all active Root-Beacon nodes in the group.")]),e._v(" "),o("p",[e._v("Number of election nodes: 1.")]),e._v(" "),o("p",[e._v("Election rules: FTS according to Root-Beacon stake.")]),e._v(" "),o("h4",{attrs:{id:"sub-beacon-group-leader-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#sub-beacon-group-leader-election"}},[e._v("#")]),e._v(" Sub-Beacon Group Leader Election")]),e._v(" "),o("p",[e._v("Election frequency: every transaction.")]),e._v(" "),o("p",[e._v("Election block consensus group: Sub-Beacon group.")]),e._v(" "),o("p",[e._v("Node pool includes: all active Sub-Beacon nodes in the group.")]),e._v(" "),o("p",[e._v("Number of election nodes: 1.")]),e._v(" "),o("p",[e._v("Election rules: FTS according to Sub-Beacon stake.")]),e._v(" "),o("h4",{attrs:{id:"consensus-cluster-leader-election"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#consensus-cluster-leader-election"}},[e._v("#")]),e._v(" Consensus Cluster Leader Election")]),e._v(" "),o("p",[e._v("The leader of the N round is selected from the validator group according to the validator stake, and the leader of the N+1 round is selected from the auditor group according to the auditor's stake. The leader is selected alternately, and one leader is selected for each transaction.")]),e._v(" "),o("p",[e._v("The consensus group elected by the leader is a consensus group composed of the validator group where the transaction sender account is located and the superior auditor group.")])])}),[],!1,null,null,null);t.default=a.exports}}]);