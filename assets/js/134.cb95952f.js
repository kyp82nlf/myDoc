(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{525:function(t,e,o){"use strict";o.r(e);var a=o(18),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"topio命令行选项"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#topio命令行选项"}},[t._v("#")]),t._v(" TOPIO命令行选项")]),t._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("HELP OPTIONS:\n    -h --help                                print help info\n    -v --version                             topio version\n\nCOMMANDS:\n    wallet                                   Create and manage accounts and public-private key pairs.\n    topcl                                    Enter topcl which is a command line interface to interact with the blockchain and manage accounts without starting xnode.\n    console                                  Enter the interactive shell environment with starting xnode.\n    attach                                   Enter topcl which is a command line interface to interact with the blockchain and manage accounts without starting xnode.\n    db                                       Manage  the  chain  database.\n\nSTART OPTIONS:\n       --datadir               [value]       Data directory for the databases and log (default: ~/Library/Topnetwork)\n       --register_deposit      [value]       Required option when node has not registered，node register deposit \n       --node_type             [value]       Required option when node has not registered，node type: edge、validator、advance\n       --nodename              [value]       Required option when node has not registered，node nickname\n    -k --node_sign_keystore    [value]       Optional option，start xnode with import keystore file\n       --node_account_addr     [value]       Required option，node-account address\n    -p --password              [value]       using password to decrypt keystore file\n    -f --password_file         [value]       using password_file to decrypt keystore file\n    -S --single_process                      start topio as single_process(default master+worker mode)\n       --cpu_net_interval      [value]       the interval of monitoring cpu and net (default: 10)\n       --ntp_interval          [value]       the interval of monitoring ntp (default: 10)\n       --admin_http_port       [value]       Connect to Admin Http Server (default: 8000)\n       --bootnodes             [value]       Comma separated endpoints(ip:port) for P2P  discovery bootstrap\n       --net_port              [value]       Network listening port (default: 9000)\n\nOTHER OPTIONS:\n    -s --signal                [value]       send signal to a master process, choices: [stop, reload]\n")])])]),o("h2",{attrs:{id:"命令说明-commands"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#命令说明-commands"}},[t._v("#")]),t._v(" 命令说明(COMMANDS)")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("命令")]),t._v(" "),o("th",[t._v("说明")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("wallet")]),t._v(" "),o("td",[t._v("创建、管理本地账户及公私钥对。")])]),t._v(" "),o("tr",[o("td",[t._v("topcl")]),t._v(" "),o("td",[t._v("进入topcl交互环境。")])]),t._v(" "),o("tr",[o("td",[t._v("console")]),t._v(" "),o("td",[t._v("启动节点进程xnode，同时进入TOPIO交互环境。")])]),t._v(" "),o("tr",[o("td",[t._v("attach")]),t._v(" "),o("td",[t._v("连接到本地节点服务器上正在运行的节点进程xnode，同时进入TOPIO交互环境。")])]),t._v(" "),o("tr",[o("td",[t._v("db")]),t._v(" "),o("td",[t._v("管理链数据库，包括备份、还原数据库。")])])])]),t._v(" "),o("h2",{attrs:{id:"选项说明"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#选项说明"}},[t._v("#")]),t._v(" 选项说明")]),t._v(" "),o("h3",{attrs:{id:"帮助选项-help-options"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#帮助选项-help-options"}},[t._v("#")]),t._v(" 帮助选项(HELP OPTIONS)")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("选项")]),t._v(" "),o("th",[t._v("说明")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("-h,--help")]),t._v(" "),o("td",[t._v("查看帮助信息，包括命令列表及某个命令的具体使用帮助。")])]),t._v(" "),o("tr",[o("td",[t._v("-v,--version")]),t._v(" "),o("td",[t._v("查看TOPIO版本。")])])])]),t._v(" "),o("h3",{attrs:{id:"启动选项-start-options"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#启动选项-start-options"}},[t._v("#")]),t._v(" 启动选项(START OPTIONS)")]),t._v(" "),o("p",[t._v("启动TOPIO的时候可以使用短命令模式或者长命令模式，比如"),o("code",[t._v("-c")]),t._v("或者 "),o("code",[t._v("--config_file")]),t._v("。")]),t._v(" "),o("p",[t._v('help信息中"value"表示需要传入一个值作为参数。')]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("选项")]),t._v(" "),o("th",[t._v("说明")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("--datadir")]),t._v(" "),o("td",[t._v("TOPIO数据目录，数据库(DB)和日志(log)等一切文件均在此目录产生，不同操作系统默认目录如下："),o("br"),t._v("Mac: $HOME/Library/Topnetwork；"),o("br"),t._v("Unix: $root/Topnetwork；"),o("br"),t._v("Windows: C:\\Topnetwork。"),o("br"),t._v("提醒："),o("br"),t._v("为了在本地运行多个节点进程，您必须确保每个节点都有一个单独的数据目录。")])]),t._v(" "),o("tr",[o("td",[t._v("--register_deposit")]),t._v(" "),o("td",[t._v("节点注册保证金，具体请参见"),o("RouterLink",{attrs:{to:"/zh/Tools/TOPIO/docs-cn/GetStartedonTOPNetwork/BecomeTOPNetworkNode/Requirment.html"}},[t._v("成为节点的要求")]),t._v("。启动节点进程时，如节点还未注册，需要此选项。")],1)]),t._v(" "),o("tr",[o("td",[t._v("--node_type")]),t._v(" "),o("td",[t._v("节点类型：edge（边缘节点）、validator（验证节点）、高级节点（advance)。启动节点进程时，如节点还未注册，需要此选项。")])]),t._v(" "),o("tr",[o("td",[t._v("--nodename")]),t._v(" "),o("td",[t._v("节点名称，4-16字符，字母、数字或下划线。启动节点进程时，如节点还未注册，需要此选项。")])]),t._v(" "),o("tr",[o("td",[t._v("-k,--node_sign_keystore")]),t._v(" "),o("td",[t._v("对于设置了node_sign_key的节点，在启动节点进程时需要使用node_sign_key的keystore文件。")])]),t._v(" "),o("tr",[o("td",[t._v("--node_account_addr")]),t._v(" "),o("td",[t._v("启动节点进程时需要传入节点账户地址。")])]),t._v(" "),o("tr",[o("td",[t._v("-p,--password(-p)")]),t._v(" "),o("td",[t._v("keystore文件密码，用来解密keystore文件。")])]),t._v(" "),o("tr",[o("td",[t._v("-f,--password_file(-f)")]),t._v(" "),o("td",[t._v("指定密码文件，用来解密keystore文件。")])]),t._v(" "),o("tr",[o("td",[t._v("-s,--single_process")]),t._v(" "),o("td",[t._v("单进程启动TOPIO，默认以多进程的方式启动。")])]),t._v(" "),o("tr",[o("td",[t._v("--cpu_net_interval")]),t._v(" "),o("td",[t._v("CPU和Net的监控间隔，默认10s。")])]),t._v(" "),o("tr",[o("td",[t._v("--ntp_interval")]),t._v(" "),o("td",[t._v("时间同步间隔，默认10s。")])]),t._v(" "),o("tr",[o("td",[t._v("--admin_http_port")]),t._v(" "),o("td",[t._v("连接的节点端口号（默认8000）。")])]),t._v(" "),o("tr",[o("td",[t._v("--bootnodes")]),t._v(" "),o("td",[t._v("种子节点，用于新节点加入P2P网络。格式：192.168.10.11:8000,192.168.30.10:8000。")])]),t._v(" "),o("tr",[o("td",[t._v("--net_port")]),t._v(" "),o("td",[t._v('P2P网络传输层监听的端口，默认为"9000"。')])])])]),t._v(" "),o("h3",{attrs:{id:"其他选项-other-options"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#其他选项-other-options"}},[t._v("#")]),t._v(" 其他选项(OTHER OPTIONS)")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("选项")]),t._v(" "),o("th",[t._v("说明")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("-s,--signal")]),t._v(" "),o("td",[t._v("-s stop：停止TOPIO；"),o("br"),t._v('-s reload：TOPIO热更新后重新载入TOPIO。但如果在启动节点进程时没有使用默认路径"/root/Topnetwork"，重新载入将失败。')])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);