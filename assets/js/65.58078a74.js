(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{459:function(t,e,n){"use strict";n.r(e);var a=n(18),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"topio-command-line-options"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#topio-command-line-options"}},[t._v("#")]),t._v(" TOPIO Command-line Options")]),t._v(" "),n("p",[t._v("After TOPIO is installed, execute "),n("code",[t._v("TOPIO")]),t._v(" under any directory to view the TOPIO command-line options.")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("HELP OPTIONS:\n    -h --help                              print help info\n    -v --version                           topio version\n\nCOMMANDS:\n    wallet                                 Create and manage accounts.\n    topcl                                  Enter topcl which is a command line interface to interact with the blockchain and manage accounts without starting xnode.\n    console                                Enter the interactive shell environment with starting xnode.\n    attach                                 Enter topcl which is a command line interface to interact with the blockchain and manage accounts without starting xnode.\n    db                                     Manage  the  chain  database.\n\nSTART OPTIONS:\n    -c --config_file         [value]       start with config file\n       --chain_id            [value]       Network identifier (integer, 0=Rec, 1=MainChain ...) (default: 1)\n       --datadir             [value]       Data directory for the databases and log (default: ~/Library/Topnetwork)\n    -k --keystore            [value]       start with import keystore file\n       --account_addr        [value]       when start topio with sub-keystore which not contain account, then main account is required\n    -p --password            [value]       using password to decrypt keystore file\n    -f --password_file       [value]       using password_file to decrypt keystore file\n    -S --single_process                    start topio as single_process(default master+worker mode)\n       --cpu_net_interval    [value]       the interval of monitoring cpu and net (default: 10)\n       --ntp_interval        [value]       the interval of monitoring ntp (default: 10)\n       --admin_http_addr     [value]       Connect to Admin Http Server (default: 127.0.0.1)\n       --admin_http_port     [value]       Connect to Admin Http Server (default: 8000)\n\n\nOTHER OPTIONS:\n    -s --signal              [value]       send signal to a master process, choices: [stop, reload]\n\n")])])]),n("h2",{attrs:{id:"commands"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#commands"}},[t._v("#")]),t._v(" Commands")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("Command")]),t._v(" "),n("th",[t._v("Description")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("wallet")]),t._v(" "),n("td",[t._v("Create and manage local accounts and public-private key pairs.")])]),t._v(" "),n("tr",[n("td",[t._v("topcl")]),t._v(" "),n("td",[t._v("Enter the topcl interactive environment.")])]),t._v(" "),n("tr",[n("td",[t._v("console")]),t._v(" "),n("td",[t._v("Start xnode meanwhile entering TOPIO interactive environment.")])]),t._v(" "),n("tr",[n("td",[t._v("attach")]),t._v(" "),n("td",[t._v("Connect to the xnode running on local node server meanwhile entering TOPIO interactive environment.")])]),t._v(" "),n("tr",[n("td",[t._v("db")]),t._v(" "),n("td",[t._v("Manage the chain database including backing up and restoring the database.")])])])]),t._v(" "),n("h2",{attrs:{id:"options"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),n("h3",{attrs:{id:"help-options"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#help-options"}},[t._v("#")]),t._v(" Help Options")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("Option")]),t._v(" "),n("th",[t._v("Description")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("-h,--help")]),t._v(" "),n("td",[t._v("View help information: a list of commands and help for specific usage of a command.")])]),t._v(" "),n("tr",[n("td",[t._v("-v,--version")]),t._v(" "),n("td",[t._v("View TOPIO version。")])])])]),t._v(" "),n("h3",{attrs:{id:"start-options"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#start-options"}},[t._v("#")]),t._v(" Start Options")]),t._v(" "),n("p",[t._v("Start TOPIO using either short command or long mode, such as "),n("code",[t._v("-c")]),t._v(" or "),n("code",[t._v("--config_file")]),t._v(".")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("Option")]),t._v(" "),n("th",[t._v("Description")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("--datadir")]),t._v(" "),n("td",[t._v("Data directory for the databases and log, the default directory of different operating systems is as follows:"),n("br"),t._v("Mac: $HOME/Library/Topnetwork；"),n("br"),t._v("Unix: $root/Topnetwork；"),n("br"),t._v("Windows: C:\\Topnetwork."),n("br"),t._v("Caution："),n("br"),t._v("In order to run multiple node processes locally, you must ensure that each node has a separate data directory.")])]),t._v(" "),n("tr",[n("td",[t._v("--keystore(-k)")]),t._v(" "),n("td",[t._v('Start TOPIO with importing keystore file (json format containing fields such as "public_key", "CipherText ", etc.).')])]),t._v(" "),n("tr",[n("td",[t._v("--accountAddr")]),t._v(" "),n("td",[t._v("Node account address.")])]),t._v(" "),n("tr",[n("td",[t._v("--password(-p)")]),t._v(" "),n("td",[t._v("Use password  to decrypt the Keystore file.")])]),t._v(" "),n("tr",[n("td",[t._v("--password_file(-f)")]),t._v(" "),n("td",[t._v("Use password file to decrypt the keystore file.")])]),t._v(" "),n("tr",[n("td",[t._v("--multiple_process(-M)")]),t._v(" "),n("td",[t._v("Start TOPIO in single process mode, default is multi-process mode.")])]),t._v(" "),n("tr",[n("td",[t._v("--cpu_net_interval")]),t._v(" "),n("td",[t._v("CPU and Net monitoring interval(default:10s).")])]),t._v(" "),n("tr",[n("td",[t._v("--ntp_interval")]),t._v(" "),n("td",[t._v("Time synchronization interval(default:10s) .")])]),t._v(" "),n("tr",[n("td",[t._v("--admin_http_port")]),t._v(" "),n("td",[t._v("Connect to Admin Http Server (default: 8000).")])]),t._v(" "),n("tr",[n("td",[t._v("--bootnodes")]),t._v(" "),n("td",[t._v("Seed nodes used for new nodes to join the P2P network.Format:192.168.10.11:8000192168 30.10:8000.")])]),t._v(" "),n("tr",[n("td",[t._v("--net_port")]),t._v(" "),n("td",[t._v("P2P network listening port(default:9000).")])])])]),t._v(" "),n("h3",{attrs:{id:"other-optiions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#other-optiions"}},[t._v("#")]),t._v(" Other Optiions")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("Option")]),t._v(" "),n("th",[t._v("Description")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("-s,--signal")]),t._v(" "),n("td",[t._v("Send signal to a master process, choices: [stop, reload].")])])])])])}),[],!1,null,null,null);e.default=o.exports}}]);